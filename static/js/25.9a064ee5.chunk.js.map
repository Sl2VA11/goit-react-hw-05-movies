{"version":3,"file":"static/js/25.9a064ee5.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieDetails/MovieDetailsMarkup/MovieDetailsMarkup.module.css?50a5","components/MovieDetails/MovieDetailsMarkup/MovieDetailsMarkup.jsx","components/MovieDetails/MovieDetailsBtn/MovieDetailsBtnMarkup/MovieDetailsBtnMarkup.jsx","components/MovieDetails/MovieDetailsBtn/MovieDetailsBtn.jsx","hooks/UseToogle.js","components/MovieDetails/MovieDetails.jsx","services/fetchMovie.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btnWrapper\":\"MovieDetailsMarkup_btnWrapper__PlKTf\",\"div\":\"MovieDetailsMarkup_div__V5WDR\",\"imgWrapper\":\"MovieDetailsMarkup_imgWrapper__Yo3RC\",\"img\":\"MovieDetailsMarkup_img__b3-V1\",\"title\":\"MovieDetailsMarkup_title__yc5Jw\",\"score\":\"MovieDetailsMarkup_score__B9bVR\",\"average\":\"MovieDetailsMarkup_average__MfjI7\",\"overview\":\"MovieDetailsMarkup_overview__g8cOs\",\"genresName\":\"MovieDetailsMarkup_genresName__zYyQA\",\"genres\":\"MovieDetailsMarkup_genres__yYgeU\",\"btnLinkWrapper\":\"MovieDetailsMarkup_btnLinkWrapper__4HT+A\",\"btnCast\":\"MovieDetailsMarkup_btnCast__5UgpZ\"};","import { Link, useLocation } from 'react-router-dom';\nimport css from './MovieDetailsMarkup.module.css';\n\nexport default function MovieDetailsMarkup({\n  name,\n  img,\n  title,\n  overview,\n  genres,\n  average,\n  count,\n  releaseDate,\n}) {\n  const location = useLocation()\n  \n  const backLinkHref = location.state?.from ?? '/';\n  return (\n    <>\n      <Link\n        to={backLinkHref}\n        \n        className={css.btnWrapper}\n      >\n        <button className=\"btn\">Go back</button>\n      </Link>\n      <div className={css.div}>\n        <div className={css.imgWrapper}>\n          <img src={img} alt={name} width={650} className={css.img} />\n        </div>\n        <div>\n          <p className={css.title}>\n            {title} ({releaseDate.slice(0, 4)})\n          </p>\n          <p className={css.score}>\n            <span className={css.average}>{average.toFixed(2)} </span> / {count}\n          </p>\n          {overview ? (\n            <p className={css.overview}>{overview}</p>\n          ) : (\n            <p>{title} Don't have overview</p>\n          )}\n          <p className={css.genresName}>\n            {' '}\n            <span className={css.genres}>Genres:</span> {genres}\n          </p>\n        </div>\n      </div>\n    </>\n  );\n}\n","import { Link, useLocation} from 'react-router-dom';\nimport css from '../../MovieDetailsMarkup/MovieDetailsMarkup.module.css';\nexport default function MovieDetailsBtnMarkup({\n  toggleCast,\n  disabledCast,\n  openCast,\n  toggleReviews,\n  disabledReviews,\n  openReviews,\n}) {\n  const location = useLocation();\n \n  return (\n    <div className={css.btnLinkWrapper}>\n      <Link  to=\"cast\" state={{ from: location.state.from }}>\n        <button\n          className={`btn ${css.btnCast}`}\n          onClick={toggleCast}\n          disabled={disabledCast}\n        >\n          {openCast === false ? 'View Cast' : 'Hide Cast'}\n        </button>\n      </Link>\n\n      <Link  to=\"reviews\" state={{ from: location.state.from }}>\n        <button\n          className=\"btn\"\n          onClick={toggleReviews}\n          disabled={disabledReviews}\n        >\n          {openReviews === false ? 'View Reviews' : 'Hide Reviews'}\n        </button>\n      </Link>\n    </div>\n  );\n}\n","import { Outlet } from 'react-router-dom';\nimport MovieDetailsBtnMarkup from 'components/MovieDetails/MovieDetailsBtn/MovieDetailsBtnMarkup/MovieDetailsBtnMarkup';\nimport useToogle from 'hooks/UseToogle';\nexport default function MovieDetailsBtn() {\n   const {\n    openCast,\n    openReviews,\n    disabledCast,\n    disabledReviews,\n    toggleCast,\n    toggleReviews,\n  } = useToogle();\n\n  return (\n    <>\n      <MovieDetailsBtnMarkup\n        toggleCast={toggleCast}\n        disabledCast={disabledCast}\n        openCast={openCast}\n        toggleReviews={toggleReviews}\n        disabledReviews={disabledReviews}\n        openReviews={openReviews}\n      />\n      {openCast === true && <Outlet />}\n      {openReviews === true && <Outlet />}\n    </>\n  );\n}\n","import { useState } from \"react\";\n\nexport default function useToogle() {\n    const [openCast, setOpenCast] = useState(false);\n    const [openReviews, setOpenReviews] = useState(false);\n    const [disabledCast, setDisabledOpenCast] = useState(false);\n    const [disabledReviews, setDisabledOpenReviews] = useState(false);\n\n    const toggleCast = () => {\n      openCast === true\n        ? setOpenCast(false) || setDisabledOpenReviews(false)\n        : setOpenCast(true) || setDisabledOpenReviews(true);\n      return;\n    };\n\n    const toggleReviews = () => {\n      openReviews === true\n        ? setOpenReviews(false) || setDisabledOpenCast(false)\n        : setOpenReviews(true) || setDisabledOpenCast(true);\n\n      return;\n    };\n   \n   \n   \n   \n   return { openCast,openReviews, disabledCast, disabledReviews, toggleCast, toggleReviews };\n}","import MovieDetailsMarkup from 'components/MovieDetails/MovieDetailsMarkup/MovieDetailsMarkup';\nimport { useEffect, useState } from 'react';\nimport { useParams} from 'react-router-dom';\nimport { getMovieDetails } from '../../services/fetchMovie';\nimport MovieDetailsBtn from './MovieDetailsBtn/MovieDetailsBtn';\n\n\n\nexport default function MovieDetails() {\n  const [details, setDetails] = useState(null);\n    \n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieDetails(movieId).then(movie => {\n      setDetails(movie);\n\n      return movie;\n    });\n  }, [movieId]);\n\n \n\n  if (details !== null) {\n    const genres = details.genres\n      .map(el => {\n        return el.name;\n      })\n      .join(', ');\n\n    const img =\n      details.backdrop_path &&\n      'https://image.tmdb.org/t/p/original/' + details.backdrop_path;\n\n    const { name, title, overview, vote_average, vote_count, release_date } =\n      details;\n   \n    return (\n      <>\n        <MovieDetailsMarkup\n          img={img}\n          name={name}\n          title={title}\n          overview={overview}\n          genres={genres}\n          average={vote_average}\n          count={vote_count}\n          releaseDate={release_date}\n        />\n\n        <MovieDetailsBtn />\n        \n        \n      </>\n    );\n  }\n}\n\n","import axios from 'axios';\n\nconst API_KEY = '1b50ba0e0b99203af5e26bdcee6d2298';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrendingMovie() {\n  const response = await axios\n    .get(BASE_URL + 'movie/popular', {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .catch(function (error) {\n      console.log(error);\n      return `No results`;\n    });\n\n  return response.data.results;\n}\n\nexport async function getMovieDetails(id) {\n  console.log(id);\n  const response = await axios\n    .get(BASE_URL + `/movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .catch(function (error) {\n      console.log(error);\n      return `No results`;\n    });\n\n  return response.data;\n}\n\nexport async function getMovieCredits(id) {\n  console.log(id);\n  const response = await axios\n    .get(BASE_URL + `/movie/${id}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .catch(() => error => {\n      console.log(error);\n      return `No results`;\n    });\n\n  return response.data.cast;\n}\n\nexport async function getMovieReviews(id) {\n  console.log(id);\n  const response = await axios\n    .get(BASE_URL + `/movie/${id}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .catch(() => error => {\n      console.log(error);\n      return `No results`;\n    });\n\n  return response.data.results;\n}\n\nexport async function getSearchMovie(query) {\n  console.log(query);\n  const response = await axios\n    .get(BASE_URL + `search/movie`, {\n      params: {\n        api_key: API_KEY,\n        query,\n      },\n    })\n\n    .catch(() => error => {\n      console.log(error);\n      return `No results`;\n    });\n \n  return response.data.results\n}\n"],"names":["MovieDetailsMarkup","name","img","title","overview","genres","average","count","releaseDate","backLinkHref","useLocation","state","from","to","className","css","src","alt","width","slice","toFixed","MovieDetailsBtnMarkup","toggleCast","disabledCast","openCast","toggleReviews","disabledReviews","openReviews","location","onClick","disabled","MovieDetailsBtn","useState","setOpenCast","setOpenReviews","setDisabledOpenCast","setDisabledOpenReviews","useToogle","MovieDetails","details","setDetails","movieId","useParams","useEffect","getMovieDetails","then","movie","map","el","join","backdrop_path","vote_average","vote_count","release_date","API_KEY","BASE_URL","getTrendingMovie","axios","params","api_key","catch","error","console","log","response","data","results","id","getMovieCredits","cast","getMovieReviews","getSearchMovie","query"],"sourceRoot":""}