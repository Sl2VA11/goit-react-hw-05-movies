{"version":3,"file":"static/js/385.586de1ea.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/CastMarkup/CastMarkup.jsx","components/Cast/Cast.jsx","services/fetchMovie.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__GlWio\",\"item\":\"Cast_item__a0CDL\",\"credit\":\"Cast_credit__op0FK\",\"imgWrapper\":\"Cast_imgWrapper__daqrK\",\"img\":\"Cast_img__-isbW\",\"aboutWrapper\":\"Cast_aboutWrapper__2sPQs\",\"span\":\"Cast_span__sGSlF\",\"about\":\"Cast_about__y9-5O\"};","import css from '../Cast.module.css';\nimport propTypes from 'prop-types';\n\nexport default function CastMarkup({credits}) {\n  return (\n    credits !== null &&\n        credits.map(credit => {\n          const { character, name, profile_path, id } = credit;\n          const img =\n            profile_path &&\n            'https://image.tmdb.org/t/p/original/' + profile_path;\n\n           return (\n              \n             \n              \n             <li key={id} className={css.item}>\n               <div className={css.imgWrapper}>\n                 {img ? (\n                   <img src={img} alt={name} width={200} className={css.img} />\n                 ) : (\n                   <>\n                     <img\n                       src=\" http://placeimg.com/250/350/animals/sepia\"\n                       alt={name}\n                       width={200}\n                       height={200}\n                       className={css.img}\n                     />\n                   </>\n                 )}\n               </div>\n               <div className={css.aboutWrapper}>\n                 <p className={css.about}>\n                   <span className={css.span}> Character:</span>\n                   {character}\n                 </p>\n                 <p className={css.about}>\n                   <span className={css.span}> Name:</span>\n                   {name}\n                 </p>\n               </div>\n             </li>\n           );\n        })\n  );\n}\n\nCastMarkup.propTypes = {\n  credit: propTypes.object,\n}","import CastMarkup from 'components/Cast/CastMarkup/CastMarkup';\nimport { useEffect, useState } from 'react';\nimport { useParams} from 'react-router-dom';\nimport { getMovieCredits } from 'services/fetchMovie';\nimport css from './Cast.module.css';\n\nexport default function Cast() {\n  const [credits, setCredits] = useState([]);\n  const { movieId } = useParams();\n  \n\n  useEffect(() => {\n    getMovieCredits(movieId).then(res => {\n      setCredits(res);\n      return res;\n    });\n  }, [movieId, setCredits]);\n\n \n    return credits.length > 0 ? (\n      <ul className={css.list}>\n        <CastMarkup credits={credits} />\n      </ul>\n    ) : (\n      <div className=\"title-wrapper\">\n        <p className=\"title\">There are no cast in this movie.</p>\n      </div>\n    );\n}\n\n","import axios from 'axios';\n\nconst API_KEY = '1b50ba0e0b99203af5e26bdcee6d2298';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrendingMovie() {\n  const response = await axios\n    .get(BASE_URL + 'movie/popular', {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .catch(function (error) {\n      console.log(error);\n      return `No results`;\n    });\n\n  return response.data.results;\n}\n\nexport async function getMovieDetails(id) {\n  console.log(id);\n  const response = await axios\n    .get(BASE_URL + `/movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .catch(function (error) {\n      console.log(error);\n      return `No results`;\n    });\n\n  return response.data;\n}\n\nexport async function getMovieCredits(id) {\n  console.log(id);\n  const response = await axios\n    .get(BASE_URL + `/movie/${id}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .catch(() => error => {\n      console.log(error);\n      return `No results`;\n    });\n\n  return response.data.cast;\n}\n\nexport async function getMovieReviews(id) {\n  console.log(id);\n  const response = await axios\n    .get(BASE_URL + `/movie/${id}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .catch(() => error => {\n      console.log(error);\n      return `No results`;\n    });\n\n  return response.data.results;\n}\n\nexport async function getSearchMovie(query) {\n  console.log(query);\n  const response = await axios\n    .get(BASE_URL + `search/movie`, {\n      params: {\n        api_key: API_KEY,\n        query,\n      },\n    })\n\n    .catch(() => error => {\n      console.log(error);\n      return `No results`;\n    });\n \n  return response.data.results\n}\n"],"names":["CastMarkup","credits","map","credit","character","name","profile_path","id","img","className","css","src","alt","width","height","Cast","useState","setCredits","movieId","useParams","useEffect","getMovieCredits","then","res","length","API_KEY","BASE_URL","getTrendingMovie","axios","params","api_key","catch","error","console","log","response","data","results","getMovieDetails","cast","getMovieReviews","getSearchMovie","query"],"sourceRoot":""}